# Generated by Django 4.1.9 on 2023-06-16 23:32

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import utilities.json


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('extras', '0092_delete_jobresult'),
        ('tenancy', '0010_tenant_relax_uniqueness'),
    ]

    operations = [
        migrations.CreateModel(
            name='Keycard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('cardnumber', models.IntegerField()),
                ('firstname', models.TextField(max_length=50)),
                ('lastname', models.TextField(max_length=50)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='keycard', to='tenancy.tenant')),
            ],
            options={
                'ordering': ('cardnumber',),
            },
        ),
        migrations.CreateModel(
            name='Key',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('keynumber', models.TextField(max_length=10)),
                ('firstname', models.TextField(max_length=50)),
                ('lastname', models.TextField(max_length=50)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='key', to='tenancy.tenant')),
            ],
            options={
                'ordering': ('keynumber',),
            },
        ),
    ]
